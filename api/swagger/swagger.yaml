swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    x-swagger-router-controller: users_controller
    get:
      description: Get all users in database
      operationId: users
      responses:
        "200":
          description: Success
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ShowUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create new User in database
      operationId: newUser
      parameters:
        - name: user
          in: body
          description: The email of the user
          required: true
          schema:
            $ref: "#/definitions/CreateUserRequest"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/CreateUserResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{userId}:
    x-swagger-router-controller: users_controller
    get:
      description: Read an User in database
      operationId: user
      parameters:
        - name: userId
          in: path
          description: The user id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CreateUserResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Read an User in database
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: The user id
          required: true
          type: string
        - name: user
          in: body
          description: The user object used to update db data
          required: true
          schema:
            $ref: "#/definitions/UpdateUserRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ShowUserResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete an User in database
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: The user id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ShowUserResponse:
    required:
      - email
      - name
      - password
      - userId
      - createdAt
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      userId:
        type: string
      createdAt:
        type: string
  UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
  CreateUserRequest:
    required:
      - email
      - name
      - password
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
  CreateUserResponse:
    required:
      - userId
    properties:
      userId:
        type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
